# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type BudgetRange {
    lowerLimit: Float!
    upperLimit: Float!
}

type JobPosting {
    budgetRange: BudgetRange
    category: String!
    description: String
    id: ID!
    location: Location!
    postedBy: User!
    skills: [String]!
}

type JobPostingFeed {
    cursor: String!
    hasNextPage: Boolean!
    jobPostings: [JobPosting]!
}

type Location {
    city: String!
    province: String!
    town: String!
}

type Mutation {
    addLocation(address: String!, city: String!, postalCode: String!, town: String!): ID!
    createJobPosting(category: String!, city: String!, description: String!, lowerLimit: Float!, province: String!, skills: [String], town: String!, upperLimit: Float!): JobPosting!
    deleteServiceRequester(user_id: ID!): String!
    loginServiceRequester(password: String!, username: String!): ServiceRequesterUser!
    makeMeServiceProvider(bio: String, city: String!, nic: String!, profession: String!, province: String!, town: String!): User!
    registerServiceRequester(contactNum: String!, address: String!, city: String!, postalCode: String!): User!
    signIn(email: String!, password: String!): String!
    signUp(email: String!, password: String!, username: String!): String!
}

type Query {
    jobPosting(id: ID!): JobPosting!
    jobPostingFeed(category: String!, city: String!, cursor: String, province: String!, town: String!): JobPostingFeed
    jobs: [JobPosting!]
    me: User!
    users: [User!]!
}

type ServiceRequesterUser {
    createdAt: String!
    email: String!
    id: ID!
    token: String!
    username: String!
}

type User {
    bio: String
    city: String
    email: String!
    id: ID!
    nic: String
    profession: String
    province: String
    roles: [String]
    service_providing_status: Boolean
    town: String
    username: String!
}
